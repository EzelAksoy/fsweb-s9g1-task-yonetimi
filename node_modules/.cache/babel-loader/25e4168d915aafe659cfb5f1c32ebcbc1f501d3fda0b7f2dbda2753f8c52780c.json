{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramaz\\\\Workintech-Repos\\\\Spring-9\\\\Monday\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(props) {\n  _s();\n  const {\n    kisiler,\n    submitFn,\n    tasks\n  } = props;\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      people: []\n    }\n  });\n  let names = watch(\"people\");\n  const onSubmit = data => {\n    let taskId = nanoid(5);\n    submitFn({\n      ...data,\n      id: taskId,\n      status: \"yapılacak\"\n    });\n    reset();\n    notify(taskId);\n  };\n  const notify = id => {\n    toast(`${id} numaralı iş eklenmiştir.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text \",\n        className: \"input-text\",\n        id: \"title\",\n        name: \"title\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        id: \"description\",\n        name: \"description\",\n        rows: \"3\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          htmlFor: item,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: item,\n            id: item,\n            checked: names.includes(item),\n            ...register(\"people\", {\n              validate: {\n                moreThanOne: p => p.length >= 1 || \"Lütfen en az bir kişi seçin\",\n                maxThree: p => p.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), item]\n        }, item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), errors.people && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: !isValid,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskHookForm, \"WbyrfuIJkqQFs0/LoO0LHFbj3SI=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["nanoid","React","useForm","toast","TaskHookForm","props","kisiler","submitFn","tasks","register","handleSubmit","watch","reset","formState","errors","isValid","mode","defaultValues","title","description","people","names","onSubmit","data","taskId","id","status","notify","required","minLength","value","message","map","item","includes","validate","moreThanOne","p","length","maxThree"],"sources":["C:/Users/ramaz/Workintech-Repos/Spring-9/Monday/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function TaskHookForm(props) {\r\n  const { kisiler, submitFn, tasks } = props;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    formState: { errors, isValid },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: { title: \"\", description: \"\", people: [] },\r\n  });\r\n\r\n  let names = watch(\"people\");\r\n  const onSubmit = (data) => {\r\n    let taskId = nanoid(5);\r\n    submitFn({\r\n      ...data,\r\n      id: taskId,\r\n      status: \"yapılacak\",\r\n    });\r\n    reset();\r\n    notify(taskId);\r\n  };\r\n\r\n  const notify = (id) => {\r\n    toast(`${id} numaralı iş eklenmiştir.`);\r\n  };\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          type=\"text \"\r\n          className=\"input-text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          {...register(\"title\", {\r\n            required: \"Task başlığı yazmalısınız\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Task başlığı en az 3 karakter olmalı\",\r\n            },\r\n          })}\r\n        />\r\n        {errors.title && <p className=\"input-error\">{errors.title.message}</p>}\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          rows=\"3\"\r\n          {...register(\"description\", {\r\n            required: \"Task açıklaması yazmalısınız\",\r\n            minLength: {\r\n              value: 10,\r\n              message: \"Task açıklaması en az 10 karakter olmalı\",\r\n            },\r\n          })}\r\n        />\r\n        {errors.description && (\r\n          <p className=\"input-error\">{errors.description.message}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\">İnsanlar</label>\r\n        <div>\r\n          {kisiler.map((item) => (\r\n            <label className=\"input-checkbox\" key={item} htmlFor={item}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"people\"\r\n                value={item}\r\n                id={item}\r\n                checked={names.includes(item)}\r\n                {...register(\"people\", {\r\n                  validate: {\r\n                    moreThanOne: (p) =>\r\n                      p.length >= 1 || \"Lütfen en az bir kişi seçin\",\r\n                    maxThree: (p) =>\r\n                      p.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\",\r\n                  },\r\n                })}\r\n              />\r\n              {item}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        {errors.people && (\r\n          <p className=\"input-error\">{errors.people.message}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-line\">\r\n        <button className=\"submit-button\" type=\"submit\" disabled={!isValid}>\r\n          Kaydet\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}